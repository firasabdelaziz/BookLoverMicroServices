version: "3"
services:
  #PHP Service
 book-authorization-ms:
    build:
      context: .
      dockerfile: Dockerfile
    image: digitalocean.com/php
    container_name: book-authorization-ms
    restart: unless-stopped
    tty: true
    environment:
      APP_NAME: book-authorization-ms
      APP_KEY: base64:20KjR77mhPY0DjEziiRYR+U2FrWvZSHfX6MVcHaMhPg=
      SERVICE_NAME: book-authorization-ms
      SERVICE_TAGS: dev
      DB_HOST: book-authorization-db
      DB_DATABASE: book-authorization-db
      DB_PASSWORD: passwd
      DB_PORT: "3306"
      DB_USERNAME: root
      APP_ENV: local
      APP_URL: book-webserver-authorization
      LOGIN_URL: book-webserver-authorization
      APP_DEBUG: "true"
      APP_LOG_LEVEL: debug
      AUTHORIZATION_URL: /oauth/authorize
      TOKEN_URL: /oauth/token
      REFRESH_URL: /oauth/token/refresh
      TOKEN_EXPIRY_HOURS: 3
      ACCEPTED_SECRETS : "[gatwaySecret]"
      MAIL_MAILER : smtp
      MAIL_HOST : sandbox.smtp.mailtrap.io
      MAIL_PORT : 2525
      MAIL_USERNAME: 1b98c7e3c5f851
      MAIL_PASSWORD: c234e6db71df88
      MAIL_ENCRYPTION :

    ports:
      - 6023:80
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./dockerfiles/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - book-network
    command: bash -c "
      (composer install || true) &&
      (php artisan migrate --seed || true) &&
      (php artisan config:cache || true) &&
      (php artisan route:clear || true)  &&
      (nginx -t && nginx) &&  chown -R www-data:www-data   /var/www/storage/*  /var/www/bootstrap/cache  &&  chmod +x /var/www/start-supervisor.sh &&
         ./start-supervisor.sh &&  php-fpm"

 book-authorization-db:
    image: mysql:5.7.22
    container_name: book-authorization-db
    restart: unless-stopped
    tty: true
    ports:
      - "33077:3306"
    environment:
          MYSQL_DATABASE: book-authorization-db
          MYSQL_ROOT_PASSWORD: "passwd"
          SERVICE_TAGS: dev
          SERVICE_NAME: mysql
    volumes:
    - dbdata:/var/www

    networks:
      - book-network
  #Nginx Service
 book-webserver-authorization:
    image: nginx:alpine
    container_name: book-webserver-authorization
    restart: unless-stopped
    tty: true
    ports:
      - "3080:80"
    volumes:
      - ./:/var/www
      - ./dockerfiles/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
        - book-network
#Docker Networks
networks:
  book-network:
    external: true
    driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local
